<Model> ::= Sequential([Conv2D(filters = <NumFilters>, kernel_size = <FilterSize>, strides = <Stride>, padding = <PaddingResponse>, input_shape = (28,28,1)), <Convs>, <Denses>,Flatten(), Dense(10, activation = '\"softmax\"')])
<Addition> ::= <Layer> | <Layer>, <Layer> | <Layer>,<Layer>,<Layer> | <Layer>,<Layer>,<Layer>,<Layer> | <Layer>,<Layer>,<Layer>,<Layer>,<Layer> | <Layer>,<Layer>,<Layer>,<Layer>,<Layer>,<Layer> | <Layer>,<Layer>,<Layer>,<Layer>,<Layer>,<Layer>,<Layer> | <Layer>,<Layer>,<Layer>,<Layer>,<Layer>,<Layer>,<Layer>,<Layer>
<Convs> ::= <ConvLayer> | <ConvLayer>, <ConvLayer>
<Denses> ::= <DenseLayer> | <DenseLayer>, <DenseLayer>
<ConvLayer> ::= <Convolution> | <Convolution>, <Pooling> 
<DenseLayer> ::= <Dense> | <Dropout>, <Dense>
<Layer> ::= <Convolution> | <Convolution>, <Pooling> | <Dropout> | <Dense>
<Convolution> ::= Conv2D(filters = <NumFilters>, kernel_size = <FilterSize>, strides = <Stride>, padding = <PaddingResponse>)
<Pooling> ::= MaxPooling2D(2 , strides = <Stride>)
<Dense> ::= Dense(units = <DenseUnits>, activation = <ActivationResponse>)
<Dropout> ::= Dropout(rate = 0.05)
<Stride> ::= 1 | 2 
<FilterSize> ::= 3 | 5
<NumFilters> ::= 32 | 64 |
<DenseUnits> ::= 128 | 256
<Float> ::= 0.<Stride><AllDigits>
<AllDigits> ::= 2 | 5 | 7 | 9
<PaddingResponse> ::= '\"same\"'
<ActivationResponse> ::= '\"relu\"' | '\"softmax\"'